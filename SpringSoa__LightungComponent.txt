//2. Build a basic lightning component that can query a list of 10 most recently created accounts and display it using a lightning app. 


Apex Class:

public class AccountForAura {
    
    @AuraEnabled
    public static List<Account> getAccountRecord()
   {
        return new List<Account>([Select id,Name FROM Account ORDER BY CreatedDate DESC LIMIT 10]);
   }
}


Lightning Component:

<aura:component controller="AccountForAura" implements="force:appHostable,forceCommunity:availableForAllPageTypes,flexipage:availableForAllPageTypes" access="global">
    <aura:handler name="init" value="{!this}" action="{!c.doInit}" />   	<!-- calling doInit method in Component Controller -->
    <aura:attribute name="accLst" type="Account[]"/>                   	    <!-- create Array type Account variable-->
    <article class="slds-card">
      <div class="slds-card__header slds-grid">
        <header class="slds-media slds-media_center slds-has-flexi-truncate">
          <div class="slds-media__figure">
            <span class="slds-icon_container slds-icon-standard-account" title="description of icon when needed">
                <lightning:icon iconName="standard:account" size="large" alternativeText="List account"/>
            </span>
          </div>
          <div class="slds-media__body">
            <h2>
              <a href="javascript:void(0);" class="slds-card__header-link slds-truncate" title="Account">
                <span class="slds-text-heading_small">Account</span>
              </a>
            </h2>
          </div>
        </header>
       </div>
      <div class="slds-card__body">
        <table class="slds-table slds-table_bordered slds-no-row-hover slds-table_cell-buffer">
          <thead>
            <tr class="slds-text-title_caps">
              <th scope="col">
                <div class="slds-truncate" title="Name">Name</div>
              </th>
            </tr>
          </thead>
          <tbody>
              <aura:iteration items="{!v.accLst}" var="acc">      <!-- iteration account record.-->
                  <tr class="slds-hint-parent">
                      <th scope="row">
                          <div class="slds-truncate" title="Spring SOA"><a href="javascript:void(0);">{!acc.Name}</a></div>
                      </th>
                  </tr>                     
              </aura:iteration>
          </tbody>
        </table>
      </div>
      <footer class="slds-card__footer"><a href="javascript:void(0);"><!--View All <span class="slds-assistive-text">entity type</span>--></a></footer>
    </article>
</aura:component>



Lightning Component Controller:

({
     doInit : function(component, event, helper) 
   		{
      	helper.getAccontRecord(component);      // Calling Helper method
    	}
})



Lightning Component Helper:

 ({
     getAccontRecord : function( component ) 
     {
       var action = component.get("c.getAccountRecord");               //Calling Apex class controller 'getAccountRecord' method

     action.setCallback(this, function(response) {
       var state = response.getState();                                //Checking response status
       var result = JSON.stringify(response.getReturnValue());
         
       if (component.isValid() && state === "SUCCESS")
             component.set("v.accLst", response.getReturnValue());     // Adding values in Aura attribute variable.   
        });
         
        $A.enqueueAction(action);
       }
 })
 
 

Lightning Application :

<aura:application extends="force:slds" >
    <c:SpringSOA_Account />
</aura:application>

